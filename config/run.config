executor {
    $slurm {
        queueSize = 30
    }
    $local {
        cpus = 1
        memory = '4 GB'
    }
}

process {
    executor = "slurm"
    cache = "lenient"
	//container = "oras://ghcr.io/cschu/nevermore@sha256:b83832ee9a88a8446ef1c6df9b091bb9725a04971b46e454b1d02d12b8d3f064"
	maxRetries = 4
    errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}
	withName: prepare_fastqs {
		executor = "local"
		scratch = null
		container = null
	}
    withName: fastqc {
        container = "docker://quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"
        cpus = 2
        memory = {4.GB * task.attempt}
        time = {4.h * task.attempt}
    }
    withName: multiqc {
        container = "docker://quay.io/biocontainers/multiqc:1.21--pyhdfd78af_0"
		publishDir = [ path: params.output_dir, mode: params.publish_mode ]        
        cpus = 1
        memory = {4.GB * task.attempt}
        time = {4.h * task.attempt}
    }
    withName: flagstats {
        container = "docker://quay.io/biocontainers/samtools:1.19.2--h50ea8bc_1"
        cpus = 2
        //memory = {8.GB * task.attempt}
        //memory = {bam.size() < 10.GB ? 8.GB * task.attempt : (bam.size() < 30.GB ? 16.GB * task.attempt : 32.GB * task.attempt)}
        memory = {2.GB * task.attempt}
        time = {4.h * task.attempt}
    }
    withLabel: kraken2 {
        container = "docker://quay.io/biocontainers/kraken2:2.1.3--pl5321hdcf5f25_0"
        cpus = 8
        memory = {64.GB * task.attempt}
        time = '7d'
    }
    withLabel: bbduk {
        container = "docker://quay.io/biocontainers/bbmap:39.06--h92535d8_0"
        cpus = 4
        memory = {8.GB * task.attempt}
        time = '2h'
    }
    withName: concat_singles {
        cpus = 1
        memory = '2.GB'
        time = '8h'
    }
    withLabel: align {
        container = "docker://quay.io/biocontainers/bwa:0.7.3a--he4a0461_9"
        cpus = 8
		// 16.GB for IGC, 128.GB for human-gut GMGC
        memory = {128.GB * task.attempt}
        time = '14d'
    }
    withLabel: samtools {
        container = "docker://quay.io/biocontainers/samtools:1.19.2--h50ea8bc_1"
		publishDir = [ path: params.output_dir, mode: params.publish_mode ]
        cpus = 8
		// 16.GB for IGC, 64.GB for human-gut GMGC
        memory = {64.GB * task.attempt}
        time = '14d'
    }
	
	withName: merge_single_fastqs {
        container = "docker://quay.io/biocontainers/bbmap:39.06--h92535d8_0"
        cpus = 1
	    memory = {64.GB * task.attempt}
	    time = {2.d * task.attempt}
	    scratch = null
	}
    withName: collate_stats {
		publishDir = [ path: params.output_dir, mode: params.publish_mode ]
    }
	withLabel: megahit {
		publishDir = [mode: "copy", path: params.output_dir]
		//container = "docker://vout/megahit"	
        container = "docker://quay.io/biocontainers/megahit:1.2.9--h43eeafb_4"
		scratch = null                                                                                                           	
        cpus = 16                                                                                                                 	
        memory = {64.GB * task.attempt}                                                                                          	
        time = {2.d * task.attempt}                                                                                              	
	}

	withName: bwa_index {
        container = "docker://quay.io/biocontainers/bwa:0.7.3a--he4a0461_9"
        cpus = 1                                                	
        memory = {8.GB * task.attempt}                         	
        time = {2.d * task.attempt}                             	
        scratch = null
	}
	withName: sortmerna {
		//container = "https://depot.galaxyproject.org/singularity/sortmerna%3A4.3.6--h9ee0642_0"
        container = "quay.io/biocontainers/sortmerna:4.3.6--h9ee0642_0"
        cpus = 8                                                		
        memory = {8.GB * task.attempt}                         		
        time = {2.d * task.attempt}                             		
        scratch = null                                          		
	}
}

singularity {
    enabled = true
    autoMounts = true
}
